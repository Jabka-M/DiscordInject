(async()=>{const e=require("asar"),o=require("fs"),s=require("path"),r=require("fs-extra"),i=require("util"),t=i.promisify(o.readFile),c=i.promisify(o.writeFile),n=/app\-[\w\.]+/gi,a=/discord_desktop_core\-\d/gi,l=`${process.env.LOCALAPPDATA}\\Discord\\`,{spawn:d}=require("child_process"),p="./tmp/app/mainScreen.js";let w;await o.access(l,o.constants.F_OK,e=>{e&&(console.error(`Discord does not exists in ${l}`),process.exit(1))});let g=o.readdirSync(`${process.env.LOCALAPPDATA}\\Discord\\`).filter(e=>n.exec(e));g.length||(console.error(`App folder does not exists in ${process.env.LOCALAPPDATA}\\Discord\\`),process.exit(1)),g=s.resolve(l,g[0]),await o.access(g,o.constants.F_OK,e=>{e&&(console.error(`${g} does not exists`),process.exit(1))});let m=s.resolve(g,"modules");w=s.resolve(g,"Discord.exe"),await o.access(m,o.constants.F_OK,e=>{e&&(console.error(`${m} does not exists`),process.exit(1))});let u=o.readdirSync(m).filter(e=>a.exec(e));u.length||(console.error(`Desktop core folder does not exists in ${m}`),process.exit(1)),u=s.resolve(m,u[0],"discord_desktop_core"),await o.access(u,o.constants.F_OK,e=>{e&&(console.error(`${u} does not exists`),process.exit(1))});let x=s.resolve(u,"core.asar");await o.access(x,o.constants.F_OK,e=>{e&&(console.error(`${x} does not exists`),process.exit(1))}),console.log("Unpacking discord core..."),await r.remove("./tmp"),await i.promisify(o.copyFile)(x,"./core.asar"),await i.promisify(o.copyFile)(x,"./core.asar.backup"),e.extractAll("./core.asar","./tmp"),await i.promisify(o.copyFile)(p,`${p}.backup`);let f=await t("./code.js");f=`mainWindow.webContents.on('dom-ready', () => {setTimeout(() => {mainWindow.webContents.executeJavaScript(\`${f}\`);}, 3000);});\nmainWindow.webContents.`,console.log("Checking...");let y=await t(p,"utf-8");y.includes("mainWindow.webContents.on('dom-ready', () => {")&&(console.error("Already Injected"),process.exit(1));let A=y.replace("mainWindow.webContents.",f);console.log("Injecting..."),await c(p,A),console.log("Building new core..."),e.createPackage("./tmp","./core.asar",e=>{e&&(console.error("Failed building core"),process.exit(1))}),require("find-process")("name","Discord",!0).then(e=>{if(e.length){console.log("Killing discord...");for(let o of e)process.kill(o.pid)}}),setTimeout(async()=>{console.log("Removing original core..."),await r.remove(x),console.log("Setting up new core..."),await i.promisify(o.copyFile)("./core.asar",x),console.log("Cleaning up..."),await r.remove("./core.asar"),await r.remove("./tmp"),console.log("Starting Discord"),await d(w,[],{detached:!0,stdio:["ignore","ignore","ignore"]}).unref(),console.log("Success")},5e3)})();